(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{790:function(t,a,e){"use strict";e.r(a);var r=e(76),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mysql-学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql-学习"}},[t._v("#")]),t._v(" MySQL 学习")]),t._v(" "),e("h3",{attrs:{id:"为什么数据库的索引是用-b-树而不是红黑树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么数据库的索引是用-b-树而不是红黑树"}},[t._v("#")]),t._v(" 为什么数据库的索引是用 B+ 树而不是红黑树？")]),t._v(" "),e("p",[t._v("从时间复杂性和空间局部性考虑")]),t._v(" "),e("ul",[e("li",[t._v("B+ 树叶子节点是有序的，大部分情况下不必遍历 IO")])]),t._v(" "),e("h3",{attrs:{id:"消息队列有-push-和-pull-两种模型-优劣是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息队列有-push-和-pull-两种模型-优劣是什么"}},[t._v("#")]),t._v(" 消息队列有 push 和 pull 两种模型，优劣是什么？")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cloud.tencent.com/document/product/406/4791",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cloud.tencent.com/document/product/406/4791"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("Server 端用 push，则感受不到消费者的压力大小（可扩展性不高）\n"),e("ul",[e("li",[t._v("对 Server 压力也很大，例如多来了几个 consumerGroup，不管 group 里的 consumer 数量有多少，都要开对应数量的线程对应提供 push 通道")])])])]),t._v(" "),e("h3",{attrs:{id:"为什么-kfk-更快"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么-kfk-更快"}},[t._v("#")]),t._v(" 为什么 KFK 更快？")]),t._v(" "),e("ul",[e("li",[t._v("减少  I/O —— 网络 IO 和磁盘 IO")])]),t._v(" "),e("h3",{attrs:{id:"金额数据存储使用整型或-decimal-型存储-尽可能使用整型-禁止使用-float-或者-double"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#金额数据存储使用整型或-decimal-型存储-尽可能使用整型-禁止使用-float-或者-double"}},[t._v("#")]),t._v(" 金额数据存储使用整型或 DECIMAL 型存储，尽可能使用整型，禁止使用 FLOAT 或者 DOUBLE")]),t._v(" "),e("p",[t._v("产生浮点数计算精度不准确的原因： 在计算机角度，计算机算的是二进制，而不是十进制。二进制后变成了无线不循环的数，而计算机可支持浮点数的小数部分可支持到52位，所有两者相加，在转换成十进制，得到的数就不准确了，加减乘除运算原理一样。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("十进制     二进制 \n0.1      0.0001 1001 1001 1001 ... \n0.2      0.0011 0011 0011 0011 ... \n0.3      0.0100 1100 1100 1100 ... \n0.4      0.0110 0110 0110 0110 ... \n0.5      0.1 \n0.6      0.1001 1001 1001 1001 ... \n")])])]),e("p",[t._v("故而0.1 + 0.2 后得到这么一串 "),e("strong",[t._v("0.0100110011001100110011001100110011001100110011001100")]),t._v(" 因浮点数小数位的限制而截断的二进制数字，这时候，我们再把它转换为十进制，就成了 "),e("strong",[t._v("0.30000000000000004")]),t._v("。")]),t._v(" "),e("p",[t._v("解决方案：高精度小数的采用 decimal（js 中也可以用 decimal.js）")])])}),[],!1,null,null,null);a.default=s.exports}}]);